old mains:





main_screen:

    setup_interface(stdscr)

    #Wait for Input
    while True:
        #Creates initial menu box
        dimensions = create_menu_box(stdscr,10,30)
        y = dimensions[0]
        x = dimensions[1]

        #Create initial box
        stdscr.addstr(y + 1, x + 2, "Welcome to my Configurator", curses.color_pair(2))
        stdscr.addstr(y + 3, x + 2, "1. Create User", curses.color_pair(2))
        stdscr.addstr(y + 4, x + 2, "2. Modify User", curses.color_pair(2))
        stdscr.addstr(y + 5, x + 2, "3. Delete User", curses.color_pair(2))
        stdscr.addstr(y + 6, x + 2, "Q. Quit", curses.color_pair(2))

        stdscr.refresh()

        key = stdscr.getch()
        if key == ord('1'):
            handle_connect(stdscr, 1)
        elif key == ord('2'):
            handle_disconnect(stdscr, 2)
        elif key == ord('3'):
            break



if __name__ == "__main__":
    curses.wrapper(main)















prototype: 
# Initialize curses
    init_curses()
    stdscr.clear()
    stdscr.refresh()
    
    # Define window dimensions
    h, w = stdscr.getmaxyx()
    
    # Button positions
    button_positions = [
        (h // 2 - 4, w // 2 - 10),
        (h // 2, w // 2 - 10)
    ]
    
    # Button texts
    button_texts = ["Add Domain", "Another Action"]
    
    # Input box states
    input_states = [False, False]
    input_values = ["", ""]
    
    # Current selected button
    current_button = 0
    
    # Create and draw buttons
    buttons = create_buttons(stdscr, button_positions, button_texts)
    
    while True:
        key = stdscr.getch()
        
        if key == ord('q'):
            break
        
        elif key == curses.KEY_UP:
            current_button = (current_button - 1) % len(buttons)
        
        elif key == curses.KEY_DOWN:
            current_button = (current_button + 1) % len(buttons)
        
        elif key == ord('\n'):
            if input_states[current_button]:
                # If the input box is already open, close it
                input_states[current_button] = False
                clear_input_box(button_positions, current_button)
                curses.curs_set(0)
            else:
                # Open the input box for the selected button
                input_states[current_button] = True
                handle_input(stdscr, button_positions, input_states, input_values, button_texts, current_button)
            
            draw_buttons(buttons, button_texts, current_button)
            draw_input_boxes(button_positions, input_states, input_values, button_texts)

        draw_buttons(buttons, button_texts, current_button)
